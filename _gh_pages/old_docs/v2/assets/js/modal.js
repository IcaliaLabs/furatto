// Generated by CoffeeScript 1.6.3
(function($) {
  "use strict";
  var $body, Modal, old;
  Modal = (function() {
    function Modal(element, options) {
      this.options = options;
      this.$element = $(element).on('click.dismiss.modal', '[data-dismiss="modal"]', $.proxy(this.hide(), this));
      this.$backdrop = null;
      this.isShown = null;
      if (this.options.remote) {
        this.$elementement.find('.modal-body').load(this.options.remote);
      }
    }

    Modal.DEFAULTS = {
      backdrop: true,
      keyboard: true,
      show: true
    };

    Modal.prototype.toggle = function() {
      return this[(!this.isShown ? 'show' : 'hide')];
    };

    Modal.prototype.show = function() {
      var event, that;
      that = this;
      event = $.Event('show.furatto.modal');
      this.$element.trigger(event);
      if (this.isShown || event.isDefaultPrevented()) {
        this.isShown = true;
        this.escape();
        return this.backdrop(function() {
          var transition;
          transition = $.support.transition && that.$element.hasClass('fade');
          if (!that.$element.parent().length) {
            that.$element.appendTo(document.body);
          }
          that.$element.show();
          if (transition) {
            that.$element[0].offsetWidth;
          }
          that.$element.addClass('in').attr('aria-hidden', false);
          that.enforceFocus();
          if (transition) {
            return that.$element.one($.support.transition.end, function() {
              return that.$element.focus().trigger('shown.furatto.modal');
            });
          } else {
            return that.$element.focus().trigger('shown.furatto.modal');
          }
        });
      }
    };

    Modal.prototype.hide = function(event) {
      if (event) {
        event.preventDefault();
      }
      event = $.Event('hide.furatto.modal');
      this.$element.trigger(event);
      if (!this.isShown || event.isDefaultPrevented()) {
        this.isShown = false;
        this.escape();
        $(document).off('focusin.furatto.modal');
        this.$element.removeClass('in').attr('aria-hidden', true);
        if ($.support.transition && this.$element.hasClass('fade')) {
          return this.$element.one($.support.transition.end, $.proxy(this.hideModal(), this)).emulateTransitionEnd(300);
        } else {
          return this.hideModal();
        }
      }
    };

    Modal.prototype.enforceFocus = function() {
      return $(document).off('focusin.furatto.modal').on('focusin.furatto.modal', $.proxy(function(e) {
        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
          return this.$element.focus();
        }
      }, this));
    };

    Modal.prototype.escape = function() {
      if (this.isShown && this.options.keyboard) {
        return this.$element.on('keyup.dismiss.furatto.modal', $.proxy(function(e) {
          return e.which === 27 && this.hide();
        }, this));
      } else if (!this.isShown) {
        return this.$element.off('keyup.dismiss.furatto.modal');
      }
    };

    Modal.prototype.hideModal = function() {
      var that;
      that = this;
      this.$element.hide();
      return this.backdrop(function() {
        that.removeBackdrop();
        return that.$element.trigger('hidden.furatto.modal');
      });
    };

    Modal.prototype.removeBackdrop = function() {
      this.$backdrop && this.$backdrop.remove();
      return this.$backdrop = null;
    };

    Modal.prototype.backdrop = function(callback) {
      var animate, doAnimate, that;
      that = this;
      animate = this.$element.hasClass('fade') ? 'fade' : '';
      if (this.isShown && this.options.backdrop) {
        doAnimate = $.support.transition && animate;
        this.$backdrop = $("<div class='modal-backdrop " + animate + "' />").appendTo(document.body);
        this.$element.on('click', $.proxy(function(e) {
          if (e.target !== e.currentTarget) {
            if (this.options.backdrop === 'static') {
              return this.$element[0].focus().call(this.$element[0]);
            } else {
              return this.hide.call(this);
            }
          }
        }));
        if (doAnimate) {
          this.$backdrop[0].offsetWidth;
        }
        this.$backdrop.addClass('in');
        if (!callback) {
          if (doAnimate) {
            this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150);
            return callback();
          }
        }
      } else if (!this.isShown && this.$backdrop) {
        this.$backdrop.removeClass('in');
        if ($.support.transition && this.$element.hasClass('fade')) {
          this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150);
          return callback();
        }
      } else if (callback) {
        return callback();
      }
    };

    return Modal;

  })();
  old = $.fn.modal;
  $.fn.modal = function(option) {
    return this.each(function() {
      var $this, data, options;
      $this = $(this);
      data = $this.data('furatto.modal');
      options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option === 'object' && option);
      console.log($this);
      if (!data) {
        $this.data('furatto.modal', (data = new Modal(this, options)));
      }
      if (typeof option === 'string') {
        return data[option]();
      } else if (options.show) {
        return data.show();
      }
    });
  };
  $(document).on('click.furatto.modal.data-api', '[data-toggle="modal"]', function(e) {
    var $target, $this, href, option;
    $this = $(this);
    href = $this.attr('href');
    $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, '')));
    option = $target.data('modal') ? 'toggle' : $.extend({
      remote: !/#/.test(href) && href
    }, $target.data(), $this.data());
    e.preventDefault();
    return $target.modal(option).one('hide', function() {
      return $this.is(':visible') && $this.focus();
    });
  });
  return $body = $(document.body).on('shown.furatto.modal', '.modal', function() {
    return $body.addClass('modal-open');
  }).on('hidden.furatto.modal', '.modal', function() {
    return $body.removeClass('modal-open');
  });
})(window.jQuery);
