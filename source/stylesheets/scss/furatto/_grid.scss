//Grid

// @compass dependencies
@import "compass/css3";
@import "functions";

$number-to-text: one two three four five six
                 seven eight nine ten eleven twelve
                 thirteen fourtheen fiftheen sixtheen;


//
//@variables
//

//Grid settings
$number-of-columns: 12 !default;
$offset-columns: $number-of-columns !default;

//Row config
$row-text-rendering: optimizespeed !default;
$row-next-to-row-separation: px-to-rems(3) !default;

//Row variations
$primary-background-color: rgba(255, 153, 51, 0.6) !default;
$danger-background-color: rgba(51, 153, 255, 0.6) !default;
$warning-background-color: rgba(51, 255, 153, 0.6) !default;
$success-background-color: rgba(255, 51, 153, 0.6) !default;
$success-height: 80px;

//Columns settings
$col-top-padding: px-to-rems(8) !default;
$col-right-padding: px-to-rems(8) !default;
$col-bottom-padding: px-to-rems(8) !default;
$col-left-padding: 0 !default;
$col-padding: $col-top-padding $col-right-padding $col-bottom-padding $col-left-padding !default;

//Stack columns
$stack-column-separation: px-to-rems(2) !default;
$stack-column-padding-right: 0 !default;
$stack-column-padding-left: 0 !default;

//Media
$grid-max-width: px-to-rems(768) !default;

//columns border
$col-border-color: #FFF !default;
$col-border-alpha: 0.5 !default;

//
//@mixin
//
@mixin grid-columns($columns: $number-of-columns) {
  $column-width: 100 / $columns;

  @for $i from 2 through $columns {

    .#{nth($number-to-text, $i)} {
      &.columns {
        width: percentage(($column-width * $i) / 100);
      }
    }
  }
}

//
//@mixin
//
@mixin grid-columns-offset($columns: $offset-columns) {
  $column-width: 100 / $columns;

  @for $i from 1 through $columns {
    .offset-#{$i} {
      margin-left: percentage(($column-width * $i) / 100);
    }
  }

}

.row {
  @extend %clearfix;
  //Columns

  @include grid-columns;
  @include grid-columns-offset;

  .one.column {
    width: percentage(100 / $number-of-columns) / 100;
  }

  display: block;
  text-rendering: $row-text-rendering;
}

//Separation between rows
.row + .row {
  margin-top: $row-next-to-row-separation;
}

//Borders and paddings are applied inside the div element
//This prevents the columns to stack by a border or padding
.column,
.columns {
  float: left;
  padding: $col-padding;

  &.border {
    border-color: transparent;
    border-width: 1px;
    border-style: solid;

    &.left {
     border-left-color: rgba($col-border-color, $col-border-alpha);
    }

    &.right {
     border-right-color: rgba($col-border-color, $col-border-alpha);
    }

    &.top {
     border-top-color: rgba($col-border-color, $col-border-alpha);
    }

    &.bottom {
     border-bottom-color: rgba($col-border-color, $col-border-alpha);
    }
  }

  .column,
  .columns {
    padding-left: 0;
  }

  &.no-padding-left {
    padding-left: 0;
  }

  &.no-padding-top {
    padding-top: 0;
  }

  &.no-padding-right {
    padding-right: 0;
  }

  &.no-padding-bottom {
    padding-bottom: 0;
  }
}

@include max-screen($grid-max-width) {
  .row > .column,
  .row > .columns {
    &.border {

      &.left {
        border-top-color: rgba($col-border-color, $col-border-alpha);
        border-left-color: transparent;
      }

      &.right {
        border-bottom-color: rgba($col-border-color, $col-border-alpha);
        border-right-color: transparent;
      }
    }
  }

  $number-to-text-columns: slice($number-to-text, 2, $number-of-columns);
  $row-columns: to-string($number-to-text-columns, '.columns,', '.row > .');

  #{".row > one.column,"}#{$row-columns} {
    width: 100%;
    margin-left: 0;
    margin-bottom: $stack-column-separation;
    padding-right: $stack-column-padding-right;
    padding-left: $stack-column-padding-left;
  }

  [class*="offset-"] {
    margin-left: 0;
  }
}
.success{
  background-color: $alert-success-background;
  text-align: center;
  color: #ffffff;
}
.danger{
  background-color: $alert-danger-background;
  text-align: center;
  color: #ffffff;
}
.warning{
  background-color: $label-warning-background;
  text-align: center;
  color: #ffffff;
}
.primary{
  background-color: #3399ff;
  text-align: center;
  color: #ffffff;
}
//complementary class is just to improve the visual html.
.complementary{
    background-color: #3333ff;
  }
.complementary2{
    background-color: #33ffff;
}
.white{
  color: #ffffff;
}
